// Code generated by ogen, DO NOT EDIT.

package api

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// ChangePasswordNoContent is response for ChangePassword operation.
type ChangePasswordNoContent struct{}

func (*ChangePasswordNoContent) changePasswordRes() {}

type ChangePasswordReq struct {
	OldPassword Password `json:"old_password"`
	NewPassword Password `json:"new_password"`
}

// GetOldPassword returns the value of OldPassword.
func (s *ChangePasswordReq) GetOldPassword() Password {
	return s.OldPassword
}

// GetNewPassword returns the value of NewPassword.
func (s *ChangePasswordReq) GetNewPassword() Password {
	return s.NewPassword
}

// SetOldPassword sets the value of OldPassword.
func (s *ChangePasswordReq) SetOldPassword(val Password) {
	s.OldPassword = val
}

// SetNewPassword sets the value of NewPassword.
func (s *ChangePasswordReq) SetNewPassword(val Password) {
	s.NewPassword = val
}

// CheckTokenNoContent is response for CheckToken operation.
type CheckTokenNoContent struct{}

func (*CheckTokenNoContent) checkTokenRes() {}

type Email string

// Ref: #/components/responses/internalErrorResponse
type InternalErrorResponse struct{}

func (*InternalErrorResponse) changePasswordRes() {}
func (*InternalErrorResponse) checkTokenRes()     {}
func (*InternalErrorResponse) getMeRes()          {}
func (*InternalErrorResponse) getUserByIdRes()    {}
func (*InternalErrorResponse) signInRes()         {}
func (*InternalErrorResponse) signUpRes()         {}
func (*InternalErrorResponse) updateMeRes()       {}

type InvalidInputResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *InvalidInputResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *InvalidInputResponse) SetMessage(val string) {
	s.Message = val
}

func (*InvalidInputResponse) changePasswordRes() {}
func (*InvalidInputResponse) signInRes()         {}
func (*InvalidInputResponse) signUpRes()         {}
func (*InvalidInputResponse) updateMeRes()       {}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type Password string

type SignInReq struct {
	Email    Email    `json:"email"`
	Password Password `json:"password"`
}

// GetEmail returns the value of Email.
func (s *SignInReq) GetEmail() Email {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *SignInReq) GetPassword() Password {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *SignInReq) SetEmail(val Email) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *SignInReq) SetPassword(val Password) {
	s.Password = val
}

type SignInResponse struct {
	Token OptString `json:"token"`
}

// GetToken returns the value of Token.
func (s *SignInResponse) GetToken() OptString {
	return s.Token
}

// SetToken sets the value of Token.
func (s *SignInResponse) SetToken(val OptString) {
	s.Token = val
}

func (*SignInResponse) signInRes() {}

// SignInUnauthorized is response for SignIn operation.
type SignInUnauthorized struct{}

func (*SignInUnauthorized) signInRes() {}

// SignUpConflict is response for SignUp operation.
type SignUpConflict struct{}

func (*SignUpConflict) signUpRes() {}

// SignUpNoContent is response for SignUp operation.
type SignUpNoContent struct{}

func (*SignUpNoContent) signUpRes() {}

type SignUpReq struct {
	Email    Email    `json:"email"`
	Username string   `json:"username"`
	Password Password `json:"password"`
}

// GetEmail returns the value of Email.
func (s *SignUpReq) GetEmail() Email {
	return s.Email
}

// GetUsername returns the value of Username.
func (s *SignUpReq) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *SignUpReq) GetPassword() Password {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *SignUpReq) SetEmail(val Email) {
	s.Email = val
}

// SetUsername sets the value of Username.
func (s *SignUpReq) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *SignUpReq) SetPassword(val Password) {
	s.Password = val
}

// Ref: #/components/responses/unauthenticatedResponse
type UnauthenticatedResponse struct{}

func (*UnauthenticatedResponse) changePasswordRes() {}
func (*UnauthenticatedResponse) checkTokenRes()     {}
func (*UnauthenticatedResponse) getMeRes()          {}
func (*UnauthenticatedResponse) getUserByIdRes()    {}
func (*UnauthenticatedResponse) updateMeRes()       {}

// Ref: #/components/schemas/user
type User struct {
	ID       UserId `json:"id"`
	Username string `json:"username"`
	Bio      string `json:"bio"`
}

// GetID returns the value of ID.
func (s *User) GetID() UserId {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *User) GetUsername() string {
	return s.Username
}

// GetBio returns the value of Bio.
func (s *User) GetBio() string {
	return s.Bio
}

// SetID sets the value of ID.
func (s *User) SetID(val UserId) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *User) SetUsername(val string) {
	s.Username = val
}

// SetBio sets the value of Bio.
func (s *User) SetBio(val string) {
	s.Bio = val
}

func (*User) getMeRes()       {}
func (*User) getUserByIdRes() {}
func (*User) updateMeRes()    {}

type UserId string

// Ref: #/components/schemas/userInput
type UserInput struct {
	Username string `json:"username"`
	Bio      string `json:"bio"`
}

// GetUsername returns the value of Username.
func (s *UserInput) GetUsername() string {
	return s.Username
}

// GetBio returns the value of Bio.
func (s *UserInput) GetBio() string {
	return s.Bio
}

// SetUsername sets the value of Username.
func (s *UserInput) SetUsername(val string) {
	s.Username = val
}

// SetBio sets the value of Bio.
func (s *UserInput) SetBio(val string) {
	s.Bio = val
}

// Ref: #/components/responses/userNotFoundResponse
type UserNotFoundResponse struct{}

func (*UserNotFoundResponse) getUserByIdRes() {}
