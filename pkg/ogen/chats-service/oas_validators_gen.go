// Code generated by ogen, DO NOT EDIT.

package api

import (
	"github.com/go-faster/errors"

	"github.com/ogen-go/ogen/validate"
)

func (s *ChatInput) Validate() error {
	if s == nil {
		return validate.ErrNilPointer
	}

	var failures []validate.FieldError
	if err := func() error {
		if err := (validate.String{
			MinLength:    3,
			MinLengthSet: true,
			MaxLength:    40,
			MaxLengthSet: true,
			Email:        false,
			Hostname:     false,
			Regex:        nil,
		}).Validate(string(s.Name)); err != nil {
			return errors.Wrap(err, "string")
		}
		return nil
	}(); err != nil {
		failures = append(failures, validate.FieldError{
			Name:  "name",
			Error: err,
		})
	}
	if len(failures) > 0 {
		return &validate.Error{Fields: failures}
	}
	return nil
}

func (s CheckAccessXTargetMethod) Validate() error {
	switch s {
	case "GET":
		return nil
	case "POST":
		return nil
	case "PUT":
		return nil
	case "DELETE":
		return nil
	default:
		return errors.Errorf("invalid value: %v", s)
	}
}

func (s ListBannedUsersOKApplicationJSON) Validate() error {
	alias := ([]BannedMembersResponseItem)(s)
	if alias == nil {
		return errors.New("nil is invalid value")
	}
	return nil
}

func (s ListChatsOKApplicationJSON) Validate() error {
	alias := ([]Chat)(s)
	if alias == nil {
		return errors.New("nil is invalid value")
	}
	return nil
}

func (s ListMembersOKApplicationJSON) Validate() error {
	alias := ([]Member)(s)
	if alias == nil {
		return errors.New("nil is invalid value")
	}
	return nil
}

func (s ListRolesOKApplicationJSON) Validate() error {
	alias := ([]Role)(s)
	if alias == nil {
		return errors.New("nil is invalid value")
	}
	return nil
}
