// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// BanUser implements banUser operation.
//
// Ban user in chat.
//
// POST /chats/{chatId}/members/{userId}/ban
func (UnimplementedHandler) BanUser(ctx context.Context, params BanUserParams) (r BanUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CheckAccess implements CheckAccess operation.
//
// Check access to uri with method.
//
// GET /roles/check-access
func (UnimplementedHandler) CheckAccess(ctx context.Context, params CheckAccessParams) (r CheckAccessRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateChat implements createChat operation.
//
// Create new chat.
//
// POST /chats
func (UnimplementedHandler) CreateChat(ctx context.Context, req *ChatInput) (r CreateChatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateRole implements createRole operation.
//
// Create role in Chat.
//
// POST /roles
func (UnimplementedHandler) CreateRole(ctx context.Context, req *RoleInput, params CreateRoleParams) (r CreateRoleRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteChat implements deleteChat operation.
//
// Delete chat by id.
//
// DELETE /chats/{chatId}
func (UnimplementedHandler) DeleteChat(ctx context.Context, params DeleteChatParams) (r DeleteChatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteRole implements deleteRole operation.
//
// Delete role in chat.
//
// DELETE /roles/{roleId}
func (UnimplementedHandler) DeleteRole(ctx context.Context, params DeleteRoleParams) (r DeleteRoleRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetChatById implements getChatById operation.
//
// Get chat info by id.
//
// GET /chats/{chatId}
func (UnimplementedHandler) GetChatById(ctx context.Context, params GetChatByIdParams) (r GetChatByIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetJoinCode implements getJoinCode operation.
//
// Get join code for chat by id.
//
// GET /chats/{chatId}/join-code
func (UnimplementedHandler) GetJoinCode(ctx context.Context, params GetJoinCodeParams) (r GetJoinCodeRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetRoleById implements getRoleById operation.
//
// Get role in Chat.
//
// GET /roles/{roleId}
func (UnimplementedHandler) GetRoleById(ctx context.Context, params GetRoleByIdParams) (r GetRoleByIdRes, _ error) {
	return r, ht.ErrNotImplemented
}

// JoinChat implements joinChat operation.
//
// Join chat.
//
// POST /chats/join
func (UnimplementedHandler) JoinChat(ctx context.Context, req *JoinChatReq) (r JoinChatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// LeaveChat implements leaveChat operation.
//
// Leave chat by id.
//
// POST /chats/{chatId}/leave
func (UnimplementedHandler) LeaveChat(ctx context.Context, params LeaveChatParams) (r LeaveChatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListChats implements listChats operation.
//
// Get chats infos for user.
//
// GET /chats
func (UnimplementedHandler) ListChats(ctx context.Context) (r ListChatsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListMembers implements listMembers operation.
//
// Get members for chat.
//
// GET /chats/{chatId}/members
func (UnimplementedHandler) ListMembers(ctx context.Context, params ListMembersParams) (r ListMembersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListRoles implements listRoles operation.
//
// Get roles for chat.
//
// GET /roles
func (UnimplementedHandler) ListRoles(ctx context.Context, params ListRolesParams) (r ListRolesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// SetRole implements setRole operation.
//
// Set role to user.
//
// POST /chats/{chatId}/members/{userId}/set-role
func (UnimplementedHandler) SetRole(ctx context.Context, req *SetRoleReq, params SetRoleParams) (r SetRoleRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateChat implements updateChat operation.
//
// Update chat info.
//
// PUT /chats/{chatId}
func (UnimplementedHandler) UpdateChat(ctx context.Context, req *ChatInput, params UpdateChatParams) (r UpdateChatRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateRole implements updateRole operation.
//
// Update role in chat.
//
// PUT /roles/{roleId}
func (UnimplementedHandler) UpdateRole(ctx context.Context, req *RoleInput, params UpdateRoleParams) (r UpdateRoleRes, _ error) {
	return r, ht.ErrNotImplemented
}
