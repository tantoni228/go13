openapi: "3.0.3"
info:
  title: Messanger users-service api
  version: "1.0"
servers:
  - url: http://localhost:8080

security:
  - bearerAuth: []

paths:
  /auth/sign-up:
    post:
      summary: Sign up to messanger
      operationId: signUp
      x-ogen-operation-group: Auth
      tags:
        - auth
      security: []
      requestBody:
        $ref: "#/components/requestBodies/signUpBody"
      responses:
        "204":
          description: Signed up
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "409":
          description: user already exists
        "500":
          $ref: "#/components/responses/internalErrorResponse"

  /auth/sign-in:
    post:
      summary: Sign in to messanger
      operationId: signIn
      x-ogen-operation-group: Auth
      tags:
        - auth
      security: []
      requestBody:
        $ref: "#/components/requestBodies/signInBody"
      responses:
        "200":
          $ref: "#/components/responses/signInResponse"
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "401":
          description: Invalid credentials
        "500":
          $ref: "#/components/responses/internalErrorResponse"

  /auth/check:
    get:
      summary: Check token
      operationId: checkToken
      x-ogen-operation-group: Auth
      tags:
        - auth
      responses:
        "204":
          description: Token is valid
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "500":
          $ref: "#/components/responses/internalErrorResponse"

  /users/me:
    get:
      summary: Get user info by token
      operationId: getMe
      x-ogen-operation-group: Users
      tags:
        - users
      responses:
        "200":
          $ref: "#/components/responses/userResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "500":
          $ref: "#/components/responses/internalErrorResponse"
    put:
      summary: Update user info
      operationId: updateMe
      x-ogen-operation-group: Users
      tags:
        - users
      requestBody:
        $ref: "#/components/requestBodies/userBody"
      responses:
        "200":
          $ref: "#/components/responses/userResponse"
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "500":
          $ref: "#/components/responses/internalErrorResponse"

  /users/me/change-password:
    post:
      summary: Change password
      operationId: changePassword
      x-ogen-operation-group: Users
      tags:
        - users
      requestBody:
        $ref: "#/components/requestBodies/changePasswordBody"
      responses:
        "204":
          description: Password changed
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "500":
          $ref: "#/components/responses/internalErrorResponse"

  /users/{userId}:
    get:
      summary: Get user by id
      operationId: getUserById
      x-ogen-operation-group: Users
      tags:
        - users
      security: []
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          $ref: "#/components/responses/userResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "404":
          $ref: "#/components/responses/userNotFoundResponse"
        "500":
          $ref: "#/components/responses/internalErrorResponse"

components:
  schemas:
    email:
      type: string
      format: email
      pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'

    password:
      type: string
      format: password

    userId:
      type: string
      pattern: uuid

    user:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/userId"
        username:
          type: string
        bio:
          type: string

    userInput:
      type: object
      properties:
        username:
          type: string
        bio:
          type: string
      required:
        - username
        - bio

  responses:
    invalidInputResponse:
      description: Invalid request parameters or body
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string

    unauthenticatedResponse:
      description: Unauthenticated

    unauthorizedResponse:
      description: Access forbidden

    internalErrorResponse:
      description: Internal server error

    userNotFoundResponse:
      description: User not found

    signInResponse:
      description: Authorized
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string

    userResponse:
      description: User info
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/user"

  parameters:
    userId:
      name: userId
      in: path
      schema:
        $ref: "#/components/schemas/userId"
      required: true
      description: "user id"

  requestBodies:
    signUpBody:
      required: true
      description: Sign up body
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                $ref: "#/components/schemas/email"
              username:
                type: string
              password:
                $ref: "#/components/schemas/password"
            required:
              - email
              - username
              - password

    signInBody:
      description: sign in body
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                $ref: "#/components/schemas/email"
              password:
                $ref: "#/components/schemas/password"
            required:
              - email
              - password

    userBody:
      description: user body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/userInput"

    changePasswordBody:
      description: change password body
      content:
        application/json:
          schema:
            type: object
            properties:
              old_password:
                $ref: "#/components/schemas/password"
              new_password:
                $ref: "#/components/schemas/password"
            required:
              - old_password
              - new_password

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
