openapi: "3.0.3"
info:
  title: Messanger messages-service api
  version: "1.0"
servers:
  - url: http://localhost:8080

security:
  - bearerAuth: []

paths:
  /messages:
    get:
      summary: Get messages for chat
      operationId: listMessages
      x-ogen-operation-group: Messages
      tags:
        - messages
      parameters:
        - $ref: "#/components/parameters/chatIdInQuery"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          $ref: "#/components/responses/messagesResponse"
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "403":
          $ref: "#/components/responses/unauthorizedResponse"
        "404":
          $ref: "#/components/responses/chatNotFoundResponse"
        "500":
          $ref: "#/components/responses/internalErrorResponse"
    post:
      summary: Send new message to chat
      operationId: sendMessage
      x-ogen-operation-group: Messages
      tags:
        - messages
      parameters:
        - $ref: "#/components/parameters/chatIdInQuery"
      requestBody:
        $ref: "#/components/requestBodies/messageBody"
      responses:
        "200":
          $ref: "#/components/responses/messageResponse"
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "403":
          $ref: "#/components/responses/unauthorizedResponse"
        "404":
          $ref: "#/components/responses/chatNotFoundResponse"
        "500":
          $ref: "#/components/responses/internalErrorResponse"

  /messages/{messageId}:
    get:
      summary: Get message in chat
      operationId: getMessageById
      x-ogen-operation-group: Messages
      tags:
        - messages
      parameters:
        - $ref: "#/components/parameters/messageId"
        - $ref: "#/components/parameters/chatIdInQuery"
      responses:
        "200":
          $ref: "#/components/responses/messageResponse"
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "403":
          $ref: "#/components/responses/unauthorizedResponse"
        "404":
          description: chat or message not found
        "500":
          $ref: "#/components/responses/internalErrorResponse"
    put:
      summary: Update message in chat
      operationId: updateMessage
      x-ogen-operation-group: Messages
      tags:
        - messages
      parameters:
        - $ref: "#/components/parameters/messageId"
        - $ref: "#/components/parameters/chatIdInQuery"
      requestBody:
        $ref: "#/components/requestBodies/messageBody"
      responses:
        "200":
          $ref: "#/components/responses/messageResponse"
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "403":
          $ref: "#/components/responses/unauthorizedResponse"
        "404":
          description: chat or message not found
        "500":
          $ref: "#/components/responses/internalErrorResponse"
    delete:
      summary: Delete message from chat
      operationId: deleteMessage
      x-ogen-operation-group: Messages
      tags:
        - messages
      parameters:
        - $ref: "#/components/parameters/messageId"
        - $ref: "#/components/parameters/chatIdInQuery"
      responses:
        "204":
          description: message deleted
        "400":
          $ref: "#/components/responses/invalidInputResponse"
        "401":
          $ref: "#/components/responses/unauthenticatedResponse"
        "403":
          $ref: "#/components/responses/unauthorizedResponse"
        "404":
          description: chat or message not found
        "500":
          $ref: "#/components/responses/internalErrorResponse"

components:
  schemas:
    email:
      type: string
      format: email
      pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'

    password:
      type: string
      format: password

    userId:
      type: string
      pattern: uuid

    chatId:
      type: integer

    messageId:
      type: integer

    message:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/messageId"
        sender_id:
          type: string
          pattern: uuid
        message:
          type: string
        edited:
          type: boolean
        send_timestamp:
          type: integer

    messageInput:
      type: object
      properties:
        message:
          type: string
      required:
        - message

  responses:
    invalidInputResponse:
      description: Invalid request parameters or body
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string

    unauthenticatedResponse:
      description: Unauthenticated

    unauthorizedResponse:
      description: Access forbidden

    internalErrorResponse:
      description: Internal server error

    chatNotFoundResponse:
      description: Chat not found

    messageNotFoundResponse:
      description: Message not found

    messageResponse:
      description: message response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/message"

    messagesResponse:
      description: messages response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/message"

  parameters:
    chatIdInQuery:
      name: chatId
      in: query
      schema:
        $ref: "#/components/schemas/chatId"
      description: chat id
      required: true

    messageId:
      name: messageId
      in: path
      schema:
        $ref: "#/components/schemas/messageId"
      required: true
      description: "message id"

    limit:
      name: limit
      in: query
      schema:
        type: integer
        default: 100
        minimum: 1
      required: true
      description: limit

    offset:
      name: offset
      in: query
      schema:
        type: integer
        default: 0
      required: true
      description: offset

  requestBodies:
    messageBody:
      description: message body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/messageInput"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
